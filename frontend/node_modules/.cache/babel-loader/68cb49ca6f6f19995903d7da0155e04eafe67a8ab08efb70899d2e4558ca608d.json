{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teilnehmer\\\\Desktop\\\\text-to-video-converter\\\\frontend\\\\src\\\\components\\\\VideoDisplay.tsx\";\nimport React from 'react';\n\n// Dies ist die gleiche Interface-Definition wie in App.tsx.\n// Optimalerweise würde man diese in einer separaten Datei (z.B. 'src/types.ts') definieren\n// und dann in beiden Komponenten importieren, um Duplikate zu vermeiden.\n\n// Definiert die Props, die die VideoDisplay-Komponente erwartet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDisplay = ({\n  videoData\n}) => {\n  // Wenn keine videoData vorhanden ist (z.B. vor dem ersten Generieren), zeige nichts an oder einen Ladezustand\n  if (!videoData || !videoData.url) {\n    return null; // Oder <p>Kein Video verfügbar. Bitte Text eingeben.</p>\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generiertes Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      width: \"600\",\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: videoData.url,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), \"Dein Browser unterst\\xFCtzt das Video-Tag nicht.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = VideoDisplay;\nexport default VideoDisplay;\nvar _c;\n$RefreshReg$(_c, \"VideoDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VideoDisplay","videoData","url","children","fileName","_jsxFileName","lineNumber","columnNumber","width","controls","src","type","_c","$RefreshReg$"],"sources":["C:/Users/Teilnehmer/Desktop/text-to-video-converter/frontend/src/components/VideoDisplay.tsx"],"sourcesContent":["import React from 'react';\n\n// Dies ist die gleiche Interface-Definition wie in App.tsx.\n// Optimalerweise würde man diese in einer separaten Datei (z.B. 'src/types.ts') definieren\n// und dann in beiden Komponenten importieren, um Duplikate zu vermeiden.\ninterface VideoData {\n    url: string;\n    // Füge hier weitere Video-Daten-Eigenschaften hinzu, falls dein Backend sie liefert\n    // z.B. title?: string; duration?: number;\n}\n\n// Definiert die Props, die die VideoDisplay-Komponente erwartet\ninterface VideoDisplayProps {\n    videoData: VideoData | null; // Erwartet das VideoData-Objekt, das auch null sein kann\n}\n\nconst VideoDisplay: React.FC<VideoDisplayProps> = ({ videoData }) => {\n    // Wenn keine videoData vorhanden ist (z.B. vor dem ersten Generieren), zeige nichts an oder einen Ladezustand\n    if (!videoData || !videoData.url) {\n        return null; // Oder <p>Kein Video verfügbar. Bitte Text eingeben.</p>\n    }\n\n    return (\n        <div>\n            <h2>Generiertes Video</h2>\n            <video width=\"600\" controls>\n                {/* Hier wird die URL aus dem videoData-Objekt verwendet */}\n                <source src={videoData.url} type=\"video/mp4\" />\n                Dein Browser unterstützt das Video-Tag nicht.\n            </video>\n        </div>\n    );\n};\n\nexport default VideoDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAOA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACjE;EACA,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACC,GAAG,EAAE;IAC9B,OAAO,IAAI,CAAC,CAAC;EACjB;EAEA,oBACIH,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BR,OAAA;MAAOS,KAAK,EAAC,KAAK;MAACC,QAAQ;MAAAN,QAAA,gBAEvBJ,OAAA;QAAQW,GAAG,EAAET,SAAS,CAACC,GAAI;QAACS,IAAI,EAAC;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAEnD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACK,EAAA,GAhBIZ,YAAyC;AAkB/C,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}