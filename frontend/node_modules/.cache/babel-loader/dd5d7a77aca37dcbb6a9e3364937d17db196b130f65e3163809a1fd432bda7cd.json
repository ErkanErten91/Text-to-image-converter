{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Privat\\\\Desktop\\\\BackUP\\\\text-to-video-converter2\\\\frontend\\\\src\\\\components\\\\VideoDisplay.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDisplay = ({\n  videoData\n}) => {\n  // Stelle sicher, dass die URL mit http://localhost:5000 beginnt, falls sie relativ ist\n  const videoUrl = videoData.url.startsWith('http') ? videoData.url : `http://localhost:5000${videoData.url}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 pt-6 border-t border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-center text-gray-800 mb-6\",\n      children: \"Dein generiertes Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-lg overflow-hidden shadow-lg max-w-3xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"w-full\",\n        controls: true,\n        autoPlay: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), \"Dein Browser unterst\\xFCtzt das Video-Tag nicht.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = VideoDisplay;\nexport default VideoDisplay;\nvar _c;\n$RefreshReg$(_c, \"VideoDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VideoDisplay","videoData","videoUrl","url","startsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","autoPlay","src","type","_c","$RefreshReg$"],"sources":["C:/Users/Privat/Desktop/BackUP/text-to-video-converter2/frontend/src/components/VideoDisplay.tsx"],"sourcesContent":["import React from 'react';\n\ninterface VideoData {\n    url: string;\n}\n\ninterface VideoDisplayProps {\n    videoData: VideoData;\n}\n\nconst VideoDisplay: React.FC<VideoDisplayProps> = ({ videoData }) => {\n    // Stelle sicher, dass die URL mit http://localhost:5000 beginnt, falls sie relativ ist\n    const videoUrl = videoData.url.startsWith('http') \n        ? videoData.url \n        : `http://localhost:5000${videoData.url}`;\n\n    return (\n        <div className=\"mt-8 pt-6 border-t border-gray-200\">\n            <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">Dein generiertes Video</h2>\n            <div className=\"rounded-lg overflow-hidden shadow-lg max-w-3xl mx-auto\">\n                <video className=\"w-full\" controls autoPlay>\n                    <source src={videoUrl} type=\"video/mp4\" />\n                    Dein Browser unterst√ºtzt das Video-Tag nicht.\n                </video>\n            </div>\n        </div>\n    );\n};\n\nexport default VideoDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACjE;EACA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,UAAU,CAAC,MAAM,CAAC,GAC3CH,SAAS,CAACE,GAAG,GACb,wBAAwBF,SAAS,CAACE,GAAG,EAAE;EAE7C,oBACIJ,OAAA;IAAKM,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBAC/CP,OAAA;MAAIM,SAAS,EAAC,uDAAuD;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjGX,OAAA;MAAKM,SAAS,EAAC,wDAAwD;MAAAC,QAAA,eACnEP,OAAA;QAAOM,SAAS,EAAC,QAAQ;QAACM,QAAQ;QAACC,QAAQ;QAAAN,QAAA,gBACvCP,OAAA;UAAQc,GAAG,EAAEX,QAAS;UAACY,IAAI,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,oDAE9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACK,EAAA,GAjBIf,YAAyC;AAmB/C,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}